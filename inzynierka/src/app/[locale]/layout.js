import { Inter } from "next/font/google";
import "./globals.css";
import ClientLayout from "./clientLayout";
import { UserContextProvider } from "./context/UserContext";
import { SearchContextProvider } from "./context/SearchContext";
import { ProfileContextProvider } from "./context/ProfileContext";
import { LanguageContextProvider } from "./context/LanguageContext";
import initTranslations from "./i18n";
import TranslationsProvider from "./components/TranslationsProvider";
import { Toaster } from "sonner";

// import { loadStripe } from "@stripe/stripe-js";

const inter = Inter({ subsets: ["latin", "latin-ext"] });

export const metadata = {
  title: "Lock.in",
  description: "Generated by create next app",
};

const i18nNamespaces = [
  "mainpage",
  "common",
  "navbar",
  "findPlayer",
  "login",
  "register",
];

// const stripePromise = loadStripe(
//   process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
// );

export default async function RootLayout({ children, params: { locale } }) {
  const { t, resources } = await initTranslations(locale, i18nNamespaces);

  return (
    <html lang="en">
      <body className={inter.className}>
        <TranslationsProvider
          resources={resources}
          locale={locale}
          namespaces={i18nNamespaces}
        >
          <LanguageContextProvider>
            <ProfileContextProvider>
              <SearchContextProvider>
                <UserContextProvider>
                  <ClientLayout>{children}</ClientLayout>

                  {/* <Toaster richColors position="bottom-right"></Toaster> */}
                </UserContextProvider>
              </SearchContextProvider>
            </ProfileContextProvider>
          </LanguageContextProvider>
        </TranslationsProvider>
      </body>
    </html>
  );
}
